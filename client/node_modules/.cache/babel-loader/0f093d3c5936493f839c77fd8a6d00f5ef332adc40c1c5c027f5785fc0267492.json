{"ast":null,"code":"var _jsxFileName = \"/Users/bobby/Desktop/domanda_chutzpah/client/src/components/P6English/PlayP6English.js\",\n  _s = $RefreshSig$();\n// import { Fragment, useEffect, useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import isEmpty from '../../utils/isEmpty';\n\n// const PlayP6English = () => {\n\n//     const [questions, setQuestions] = useState([]);\n//     const [currentQuestion, setCurrentQuestion] = useState({});\n//     const [nextQuestion, setNextQuestion] = useState({});\n//     const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         ajayFetch();\n//         displayQuestions(questions, currentQuestion, nextQuestion);\n//     })\n\n//     const ajayFetch = async () => {\n//         try {\n//             let res = await axios.get('http://localhost:3000/P6EnglishQuestions')\n//             console.log(\"Fetch completed...\")\n//             console.log(\"Result: \" + res.data)\n//             const list = res.data.sort(() => 0.5 - Math.random())\n//             let shuffled_data = list.slice(0, 30)\n//             return shuffled_data\n//         }\n//         catch (err) {\n//             console.error(err)\n//         }\n//     }\n\n//     const displayQuestions = (questions, currentQuestion, nextQuestion) => {\n//         if(!isEmpty(questions)) {\n//             currentQuestion = questions[currentQuestionIndex];\n//             nextQuestion = questions[currentQuestionIndex + 1];\n\n//             setCurrentQuestion =(currentQuestion);\n//             setNextQuestion(nextQuestion);\n//         }\n//     };\n\n//     const handleQuitButton = () => {\n//         if (window.confirm(\"Are you sure you want to quit?\")) {\n//             navigate('/');\n//         }\n//     }\n\n//     return (\n//         <Fragment> \n\n//           <title> Domanda </title> \n\n//             <div>\n//                 <h2> P6 English </h2>\n//                 <h5> {currentQuestion.questionText} </h5>   \n//             </div>\n\n//             <div>\n//                 <button onClick={handleQuitButton}> Quit </button>\n//             </div>\n\n//         </Fragment>\n\n//     )\n\n// }\n\n// export default PlayP6English;\n\nimport { Fragment, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport isEmpty from '../../utils/isEmpty';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayP6English = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState({});\n  const [nextQuestion, setNextQuestion] = useState({});\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const res = await axios.get('http://localhost:3000/P6EnglishQuestions');\n        console.log(\"Fetch completed...\");\n        console.log(\"Result: \" + res.data);\n        const list = res.data.sort(() => 0.5 - Math.random());\n        const shuffled_data = list.slice(0, 30);\n        setQuestions(shuffled_data);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  useEffect(() => {\n    if (!isEmpty(questions)) {\n      setCurrentQuestion(questions[currentQuestionIndex]);\n      setNextQuestion(questions[currentQuestionIndex + 1]);\n    }\n  }, [questions, currentQuestionIndex]);\n  const handleQuitButton = () => {\n    if (window.confirm(\"Are you sure you want to quit?\")) {\n      navigate('/');\n    }\n  };\n  const handleNextButton = () => {\n    if (nextQuestion !== undefined) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setQuestions(state, currentQuestion, nextQuestion);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"title\", {\n      children: \"Domanda\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"P6 English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: currentQuestion.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleQuitButton,\n        children: \"Quit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextButton,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n};\n_s(PlayP6English, \"JcgO/3zEvCqfidOcyho/2ZgTCTc=\", false, function () {\n  return [useNavigate];\n});\n_c = PlayP6English;\nexport default PlayP6English;\nvar _c;\n$RefreshReg$(_c, \"PlayP6English\");","map":{"version":3,"names":["Fragment","useEffect","useState","useNavigate","axios","isEmpty","jsxDEV","_jsxDEV","PlayP6English","_s","questions","setQuestions","currentQuestion","setCurrentQuestion","nextQuestion","setNextQuestion","currentQuestionIndex","setCurrentQuestionIndex","navigate","fetchQuestions","res","get","console","log","data","list","sort","Math","random","shuffled_data","slice","err","error","handleQuitButton","window","confirm","handleNextButton","undefined","state","children","fileName","_jsxFileName","lineNumber","columnNumber","questionText","onClick","_c","$RefreshReg$"],"sources":["/Users/bobby/Desktop/domanda_chutzpah/client/src/components/P6English/PlayP6English.js"],"sourcesContent":["// import { Fragment, useEffect, useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import isEmpty from '../../utils/isEmpty';\n\n// const PlayP6English = () => {\n\n//     const [questions, setQuestions] = useState([]);\n//     const [currentQuestion, setCurrentQuestion] = useState({});\n//     const [nextQuestion, setNextQuestion] = useState({});\n//     const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         ajayFetch();\n//         displayQuestions(questions, currentQuestion, nextQuestion);\n//     })\n\n//     const ajayFetch = async () => {\n//         try {\n//             let res = await axios.get('http://localhost:3000/P6EnglishQuestions')\n//             console.log(\"Fetch completed...\")\n//             console.log(\"Result: \" + res.data)\n//             const list = res.data.sort(() => 0.5 - Math.random())\n//             let shuffled_data = list.slice(0, 30)\n//             return shuffled_data\n//         }\n//         catch (err) {\n//             console.error(err)\n//         }\n//     }\n\n//     const displayQuestions = (questions, currentQuestion, nextQuestion) => {\n//         if(!isEmpty(questions)) {\n//             currentQuestion = questions[currentQuestionIndex];\n//             nextQuestion = questions[currentQuestionIndex + 1];\n\n//             setCurrentQuestion =(currentQuestion);\n//             setNextQuestion(nextQuestion);\n//         }\n//     };\n\n//     const handleQuitButton = () => {\n//         if (window.confirm(\"Are you sure you want to quit?\")) {\n//             navigate('/');\n//         }\n//     }\n\n//     return (\n//         <Fragment> \n          \n//           <title> Domanda </title> \n        \n//             <div>\n//                 <h2> P6 English </h2>\n//                 <h5> {currentQuestion.questionText} </h5>   \n//             </div>\n\n//             <div>\n//                 <button onClick={handleQuitButton}> Quit </button>\n//             </div>\n\n\n//         </Fragment>\n\n//     )\n\n// }\n\n// export default PlayP6English;\n\nimport { Fragment, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport isEmpty from '../../utils/isEmpty';\n\nconst PlayP6English = () => {\n    const [questions, setQuestions] = useState([]);\n    const [currentQuestion, setCurrentQuestion] = useState({});\n    const [nextQuestion, setNextQuestion] = useState({});\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchQuestions = async () => {\n            try {\n                const res = await axios.get('http://localhost:3000/P6EnglishQuestions')\n                console.log(\"Fetch completed...\")\n                console.log(\"Result: \" + res.data)\n                const list = res.data.sort(() => 0.5 - Math.random())\n                const shuffled_data = list.slice(0, 30)\n                setQuestions(shuffled_data)\n            }\n            catch (err) {\n                console.error(err)\n            }\n        };\n        fetchQuestions();\n    }, [])\n\n    useEffect(() => {\n        if (!isEmpty(questions)) {\n            setCurrentQuestion(questions[currentQuestionIndex]);\n            setNextQuestion(questions[currentQuestionIndex + 1]);\n        }\n    }, [questions, currentQuestionIndex])\n\n    const handleQuitButton = () => {\n        if (window.confirm(\"Are you sure you want to quit?\")) {\n            navigate('/');\n        }\n    }\n\n    const handleNextButton = () => {\n        if (nextQuestion !== undefined) {\n            setCurrentQuestionIndex(currentQuestionIndex + 1);\n            setQuestions(state, currentQuestion, nextQuestion)\n        }\n    }\n\n    return (\n        <Fragment>\n            <title>Domanda</title>\n\n            <div>\n                <h2>P6 English</h2>\n                <h5>{currentQuestion.questionText}</h5>\n            </div>\n\n            <div>\n                <button onClick={handleQuitButton}>Quit</button>\n                <button onClick={handleNextButton}>Next</button>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default PlayP6English;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}