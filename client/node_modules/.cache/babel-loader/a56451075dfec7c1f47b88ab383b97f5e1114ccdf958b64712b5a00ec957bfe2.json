{"ast":null,"code":"var _jsxFileName = \"/Users/bobby/Desktop/domanda_chutzpah/client/src/components/P6English/PlayP6English.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useEffect, useState, useRef, React } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport isEmpty from '../../utils/isEmpty';\nimport M from 'materialize-css';\nimport './play.css';\nimport classnames from 'classnames';\nimport correctNotification from '../../assets/audio/correct-answer.mp3';\nimport wrongNotification from '../../assets/audio/wrong-answer.mp3';\nimport buttonSound from '../../assets/audio/button-sound.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayP6English = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState({});\n  const [nextQuestion, setNextQuestion] = useState({});\n  const [answer, setAnswer] = useState(\"\");\n  const [numberOfQuestions, setNumberOfQuestions] = useState(0);\n  const [numberOfAnsweredQuestions, setNumberOfAnsweredQuestions] = useState(0);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [wrongAnswers, setWrongAnswers] = useState(0);\n  const [previousRandomNumbers, setPreviousRandomNumbers] = useState([]);\n  const [hints, setHints] = useState(10);\n  const [usedHints, setUsedHints] = useState(false);\n  const [fiftyFifty, setFiftyFifty] = useState(5);\n  const [usedFiftyFifty, setUsedFiftyFifty] = useState(false);\n  const [time, setTime] = useState({});\n  const interval = useRef(null);\n  const navigate = useNavigate();\n  const correctSound = useRef(null);\n  const wrongSound = useRef(null);\n  const buttonSound = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get('http://localhost:3000/P6EnglishQuestions');\n        const list = res.data.sort(() => 0.5 - Math.random());\n        const shuffledData = list.slice(0, 10);\n        setQuestions(shuffledData);\n        displayQuestions(shuffledData, currentQuestion, nextQuestion);\n        startTimer();\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchData();\n  }, []);\n  const displayQuestions = (questions, currentQuestion, nextQuestion) => {\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n    if (!isEmpty(questions)) {\n      currentQuestion = questions[currentQuestionIndex];\n      nextQuestion = questions[currentQuestionIndex + 1];\n      const answer = currentQuestion.answer;\n      setCurrentQuestion(currentQuestion);\n      setNextQuestion(nextQuestion);\n      setNumberOfQuestions(questions.length);\n      setAnswer(answer);\n      setPreviousRandomNumbers([]);\n      showOptions();\n    }\n    ;\n  };\n  const handleOptionClick = e => {\n    if (e.target.innerHTML.toLowerCase() === answer.toLowerCase()) {\n      setTimeout(() => {\n        correctSound.current.play();\n      }, 10);\n      correctAnswer();\n    } else {\n      setTimeout(() => {\n        wrongSound.current.play();\n      }, 10);\n      wrongAnswer();\n    }\n  };\n  const correctAnswer = () => {\n    M.toast({\n      html: 'Correct Answer',\n      classes: 'toast-valid',\n      displayLength: 1500\n    });\n    setScore(score + 1);\n    setCorrectAnswers(correctAnswers + 1);\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n    setNumberOfAnsweredQuestions(numberOfAnsweredQuestions + 1);\n    if (nextQuestion === undefined) {\n      endGame();\n    } else {\n      displayQuestions(questions, currentQuestion, nextQuestion);\n    }\n  };\n  const wrongAnswer = () => {\n    M.toast({\n      html: 'Wrong Answer',\n      classes: 'toast-invalid',\n      displayLength: 1500\n    });\n    setWrongAnswers(wrongAnswers + 1);\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n    setNumberOfAnsweredQuestions(numberOfAnsweredQuestions + 1);\n    if (nextQuestion === undefined) {\n      endGame();\n    } else {\n      displayQuestions(questions, currentQuestion, nextQuestion);\n    }\n  };\n  const handleQuitButton = () => {\n    if (window.confirm(\"Are you sure you want to quit?\")) {\n      navigate('/');\n    }\n  };\n  const showOptions = () => {\n    const options = Array.from(document.querySelectorAll('.option'));\n    options.forEach(option => {\n      option.style.visibility = 'visible';\n    });\n    setUsedFiftyFifty(false);\n    setUsedHints(false);\n  };\n  const endGame = () => {\n    const playerStats = {\n      score: score,\n      numberOfQuestions: numberOfQuestions,\n      numberOfAnsweredQuestions: correctAnswers + wrongAnswers,\n      correctAnswers: correctAnswers,\n      wrongAnswers: wrongAnswers,\n      usedHints: usedHints\n    };\n    setTimeout(() => {\n      console.log(playerStats);\n      navigate('/Summary', playerStats);\n    }, 20);\n  };\n  const handleHints = () => {\n    if (hints > 0 && !usedHints && !usedFiftyFifty) {\n      const options = Array.from(document.querySelectorAll('.option'));\n      let indexOfAnswer;\n      options.forEach((option, index) => {\n        if (option.innerHTML.toLowerCase() === answer.toLowerCase()) {\n          indexOfAnswer = index;\n        }\n      });\n      while (true) {\n        const randomNumber = Math.round(Math.random() * 3);\n        if (randomNumber !== indexOfAnswer && !previousRandomNumbers.includes(randomNumber)) {\n          options.forEach((option, index) => {\n            if (index === randomNumber) {\n              option.style.visibility = 'hidden';\n              setHints(hints - 1);\n              setPreviousRandomNumbers(previousRandomNumbers.concat(randomNumber));\n              setUsedHints(true);\n            }\n          });\n          break;\n        }\n        if (previousRandomNumbers.length >= 3) {\n          break;\n        }\n      }\n    }\n  };\n  const handleFiftyFifty = () => {\n    if (fiftyFifty > 0 && usedFiftyFifty === false && usedHints === false) {\n      const options = document.querySelectorAll('.option');\n      const randomNumbers = [];\n      let indexOfAnswer;\n      options.forEach((option, index) => {\n        if (option.innerHTML.toLowerCase() === answer.toLowerCase()) {\n          indexOfAnswer = index;\n        }\n      });\n      let count = 0;\n      do {\n        const randomNumber = Math.round(Math.random() * 3);\n        if (randomNumber !== indexOfAnswer) {\n          if (randomNumbers.length < 2 && randomNumbers.includes(randomNumber) && randomNumbers.includes(indexOfAnswer)) {\n            randomNumbers.push(randomNumber);\n            count++;\n          } else {\n            while (true) {\n              const newRandomNumber = Math.round(Math.random() * 3);\n              if (!randomNumbers.includes(newRandomNumber) && newRandomNumber !== indexOfAnswer) {\n                randomNumbers.push(newRandomNumber);\n                count++;\n                break;\n              }\n            }\n          }\n        }\n      } while (count < 2);\n      options.forEach((option, index) => {\n        if (randomNumbers.includes(index)) {\n          option.style.visibility = 'hidden';\n        }\n      });\n      setFiftyFifty(fiftyFifty - 1);\n      setUsedFiftyFifty(true);\n    }\n  };\n  const startTimer = () => {\n    const countDownTime = Date.now() + 600000;\n    let interval = setInterval(() => {\n      const now = new Date();\n      const distance = countDownTime - now;\n      const minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n      const seconds = Math.floor(distance % (1000 * 60) / 1000);\n      if (distance < 0) {\n        clearInterval(interval);\n        setTime({\n          minutes: 0,\n          seconds: 0\n        });\n        endGame();\n      } else {\n        setTime({\n          minutes,\n          seconds,\n          distance\n        });\n      }\n    }, 1000);\n  };\n  const handleNextButton = () => {\n    playButtonSound();\n    if (nextQuestion !== undefined) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      displayQuestions(questions, currentQuestion, nextQuestion);\n    }\n  };\n  const playButtonSound = () => {\n    buttonSound.current.play();\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \" Domanda \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: correctSound,\n        src: correctNotification\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: wrongSound,\n        src: wrongNotification\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: buttonSound,\n        src: buttonSound\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"P6 English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"left\",\n              style: {\n                float: 'left'\n              },\n              children: [currentQuestionIndex, \" of \", numberOfQuestions]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classnames('right valid', {\n                'warning': time.distance <= 120000,\n                'invalid': time.distance < 30000\n              }),\n              children: [time.minutes, \":\", time.seconds, /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mdi mdi-clock-outline mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 29\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lifeline-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: handleFiftyFifty,\n            className: \"mdi mdi-heart-half-full mdi-24px lifeline-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"lifeline\",\n            children: fiftyFifty\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: handleHints,\n            className: \"mdi mdi-flash mdi-24px lifeline-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"lifeline\",\n            children: hints\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: currentQuestion.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: handleOptionClick,\n          className: \"option\",\n          children: currentQuestion.optionA\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: handleOptionClick,\n          className: \"option\",\n          children: currentQuestion.optionB\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: handleOptionClick,\n          className: \"option\",\n          children: currentQuestion.optionC\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: handleOptionClick,\n          className: \"option\",\n          children: currentQuestion.optionD\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleQuitButton,\n          children: \"Quit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextButton,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 9\n  }, this);\n};\n_s(PlayP6English, \"AMcVyRK+PkPxYOCbtFapigMsMr4=\", false, function () {\n  return [useNavigate];\n});\n_c = PlayP6English;\nexport default PlayP6English;\nvar _c;\n$RefreshReg$(_c, \"PlayP6English\");","map":{"version":3,"names":["Fragment","useEffect","useState","useRef","React","Helmet","useNavigate","axios","isEmpty","M","classnames","correctNotification","wrongNotification","buttonSound","jsxDEV","_jsxDEV","PlayP6English","_s","questions","setQuestions","currentQuestion","setCurrentQuestion","nextQuestion","setNextQuestion","answer","setAnswer","numberOfQuestions","setNumberOfQuestions","numberOfAnsweredQuestions","setNumberOfAnsweredQuestions","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","correctAnswers","setCorrectAnswers","wrongAnswers","setWrongAnswers","previousRandomNumbers","setPreviousRandomNumbers","hints","setHints","usedHints","setUsedHints","fiftyFifty","setFiftyFifty","usedFiftyFifty","setUsedFiftyFifty","time","setTime","interval","navigate","correctSound","wrongSound","fetchData","res","get","list","data","sort","Math","random","shuffledData","slice","displayQuestions","startTimer","err","console","error","length","showOptions","handleOptionClick","e","target","innerHTML","toLowerCase","setTimeout","current","play","correctAnswer","wrongAnswer","toast","html","classes","displayLength","undefined","endGame","handleQuitButton","window","confirm","options","Array","from","document","querySelectorAll","forEach","option","style","visibility","playerStats","log","handleHints","indexOfAnswer","index","randomNumber","round","includes","concat","handleFiftyFifty","randomNumbers","count","push","newRandomNumber","countDownTime","Date","now","setInterval","distance","minutes","floor","seconds","clearInterval","handleNextButton","playButtonSound","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","className","float","onClick","questionText","optionA","optionB","optionC","optionD","_c","$RefreshReg$"],"sources":["/Users/bobby/Desktop/domanda_chutzpah/client/src/components/P6English/PlayP6English.js"],"sourcesContent":["import { Fragment, useEffect, useState, useRef, React } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport isEmpty from '../../utils/isEmpty';\nimport M from 'materialize-css';\nimport './play.css';\nimport classnames from 'classnames';\n\nimport correctNotification from '../../assets/audio/correct-answer.mp3';\nimport wrongNotification from '../../assets/audio/wrong-answer.mp3';\nimport buttonSound from '../../assets/audio/button-sound.mp3';\n\nconst PlayP6English = () => {\n    const [questions, setQuestions] = useState([]);\n    const [currentQuestion, setCurrentQuestion] = useState({});\n    const [nextQuestion, setNextQuestion] = useState({});\n    const [answer, setAnswer] = useState(\"\");\n    const [numberOfQuestions, setNumberOfQuestions] = useState(0);\n    const [numberOfAnsweredQuestions, setNumberOfAnsweredQuestions] = useState(0);\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const [score, setScore] = useState(0);\n    const [correctAnswers, setCorrectAnswers]= useState(0);\n    const [wrongAnswers, setWrongAnswers] = useState(0);\n    const [previousRandomNumbers, setPreviousRandomNumbers] = useState([]);\n    const [hints, setHints] = useState(10);\n    const [usedHints, setUsedHints] = useState(false);\n    const [fiftyFifty, setFiftyFifty] = useState(5);\n    const [usedFiftyFifty, setUsedFiftyFifty] = useState(false);\n    const [time, setTime] = useState({});\n\n    const interval = useRef(null);\n    const navigate = useNavigate();\n\n    const correctSound = useRef(null);\n    const wrongSound = useRef(null);\n    const buttonSound = useRef(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n          try {\n            const res = await axios.get('http://localhost:3000/P6EnglishQuestions');\n            const list = res.data.sort(() => 0.5 - Math.random());\n            const shuffledData = list.slice(0, 10);\n            setQuestions(shuffledData);\n            displayQuestions(shuffledData, currentQuestion, nextQuestion);\n            startTimer();\n          } catch (err) {\n            console.error(err);\n          }\n        };\n        fetchData();\n      }, []);\n\n    \n    const displayQuestions = (questions, currentQuestion, nextQuestion) => {\n        \n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n\n        if (!isEmpty(questions)) {\n            currentQuestion = questions[currentQuestionIndex];\n            nextQuestion = questions[currentQuestionIndex + 1];\n            const answer = currentQuestion.answer;\n         \n            setCurrentQuestion(currentQuestion)\n            setNextQuestion(nextQuestion)\n            setNumberOfQuestions(questions.length)\n            setAnswer(answer)\n            setPreviousRandomNumbers([])\n            showOptions();\n             \n            };\n        }\n\n    const handleOptionClick = (e) => {\n        if (e.target.innerHTML.toLowerCase() === answer.toLowerCase()) {\n          setTimeout(() => {\n            correctSound.current.play();\n          }, 10)\n           \n          correctAnswer();\n        } else {\n            setTimeout(() => {\n              wrongSound.current.play();\n            }, 10);\n          wrongAnswer();\n        }\n      }\n\n    const correctAnswer = () => {\n        M.toast ({\n            html: 'Correct Answer',\n            classes: 'toast-valid',\n            displayLength: 1500\n        });\n\n            setScore(score + 1);\n            setCorrectAnswers(correctAnswers + 1 );\n            setCurrentQuestionIndex(currentQuestionIndex + 1);\n            setNumberOfAnsweredQuestions(numberOfAnsweredQuestions + 1);\n         \n            if (nextQuestion === undefined) {\n                endGame();\n            } else {\n                displayQuestions(questions, currentQuestion, nextQuestion)\n            }    \n    }\n        \n\n    const wrongAnswer = () => {\n        M.toast ({\n            html: 'Wrong Answer',\n            classes: 'toast-invalid',\n            displayLength: 1500\n        });\n            setWrongAnswers(wrongAnswers + 1 );\n            setCurrentQuestionIndex(currentQuestionIndex + 1);\n            setNumberOfAnsweredQuestions(numberOfAnsweredQuestions + 1);\n         \n            if (nextQuestion === undefined) {\n                endGame();\n            } else {\n                displayQuestions(questions, currentQuestion, nextQuestion)\n            }    \n    }\n \n    const handleQuitButton = () => {\n        if (window.confirm(\"Are you sure you want to quit?\")) {\n            navigate('/');\n        }\n    }\n\n\n    const showOptions = () => {\n        const options = Array.from(document.querySelectorAll('.option'));\n\n        options.forEach(option => {\n            option.style.visibility='visible';\n        });\n\n        setUsedFiftyFifty(false);\n        setUsedHints(false);        \n    }\n\n    const endGame = () => {\n        const playerStats = {\n            score: score,\n            numberOfQuestions: numberOfQuestions,\n            numberOfAnsweredQuestions: correctAnswers + wrongAnswers,\n            correctAnswers: correctAnswers,\n            wrongAnswers: wrongAnswers,\n            usedHints: usedHints\n        };\n        \n        setTimeout(() => {\n            console.log(playerStats);\n            navigate('/Summary', playerStats)\n        }, 20);\n    }\n\n    const handleHints = () => {\n        if (hints > 0 && !usedHints && !usedFiftyFifty) {\n          const options = Array.from(document.querySelectorAll('.option'));\n          let indexOfAnswer;\n    \n          options.forEach((option, index) => {\n            if (option.innerHTML.toLowerCase() === answer.toLowerCase()) {\n              indexOfAnswer = index;\n            }\n          });\n    \n          while (true) {\n            const randomNumber = Math.round(Math.random() * 3);\n            if (randomNumber !== indexOfAnswer && !previousRandomNumbers.includes(randomNumber)) {\n              options.forEach((option, index) => {\n                if (index === randomNumber) {\n                  option.style.visibility = 'hidden';\n                  setHints(hints - 1);\n                  setPreviousRandomNumbers(previousRandomNumbers.concat(randomNumber));\n                  setUsedHints(true);\n                }\n              });\n              break;\n            }\n            if (previousRandomNumbers.length >= 3) {\n              break;\n            }\n          }\n        }\n      };\n\n      const handleFiftyFifty = () => {\n        if (fiftyFifty > 0 && usedFiftyFifty === false && usedHints === false) {\n            const options = document.querySelectorAll('.option');\n            const randomNumbers = [];\n            let indexOfAnswer;\n\n            options.forEach((option, index) => {\n                if (option.innerHTML.toLowerCase() === answer.toLowerCase()) {\n                    indexOfAnswer = index;\n                }\n            });\n\n            let count = 0;\n            do {\n                const randomNumber = Math.round(Math.random() * 3);\n                if (randomNumber!== indexOfAnswer) {\n                    if (randomNumbers.length < 2&&\n                        randomNumbers.includes(randomNumber) &&\n                        randomNumbers.includes(indexOfAnswer)) {\n                            randomNumbers.push(randomNumber);\n                            count ++;\n                        } else {\n                            while (true) {\n                                const newRandomNumber = Math.round(Math.random() * 3);\n                                if(!randomNumbers.includes(newRandomNumber) && \n                                    newRandomNumber!==indexOfAnswer) {\n                                        randomNumbers.push(newRandomNumber);\n                                        count ++;\n                                        break;\n                                    }\n                            }\n                        }\n                }\n            } while (count < 2)\n\n            options.forEach((option, index) => {\n                if (randomNumbers.includes(index)) {\n                    option.style.visibility='hidden';\n                }\n            });\n\n            setFiftyFifty(fiftyFifty - 1);\n            setUsedFiftyFifty(true);\n        }\n\n    }\n\n    const startTimer = () => {\n        const countDownTime  = Date.now() + 600000;\n        let interval = setInterval(() => {\n            const now = new Date();\n            const distance = countDownTime - now;\n\n            const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            const seconds = Math.floor((distance % (1000 * 60)) / 1000); \n\n            if (distance < 0) {\n                clearInterval(interval);\n                setTime({minutes: 0, seconds: 0})\n                endGame();\n            } else {\n                setTime({minutes, seconds, distance})\n            }\n        }, 1000);\n    }   \n     \n    const handleNextButton = () => {\n        playButtonSound();\n        if (nextQuestion !== undefined) {\n            setCurrentQuestionIndex(currentQuestionIndex + 1);\n            displayQuestions(questions, currentQuestion, nextQuestion)\n        }\n    }\n\n    const playButtonSound = () => {\n        buttonSound.current.play();\n    }\n\n    return (\n        \n        <Fragment>\n        <Helmet><title> Domanda </title> </Helmet>\n            <Fragment>\n                <audio ref={correctSound} src={correctNotification}></audio>\n                <audio ref={wrongSound} src={wrongNotification}></audio>\n                <audio ref={buttonSound} src={buttonSound}></audio>\n            </Fragment>\n\n            <div className=\"questions\">\n                <h2>P6 English</h2>\n              \n\n                <div className=\"timer-container\">\n                        <p> <h6>\n                            <span className=\"left\" style={{ float:'left' }}>{currentQuestionIndex} of {numberOfQuestions}</span>\n                            <span className={classnames('right valid', {\n                                'warning': time.distance <= 120000,\n                                'invalid': time.distance < 30000,\n                            })}>\n                                {time.minutes}:{time.seconds}\n                                <span className=\"mdi mdi-clock-outline mdi-24px\"></span>\n                                <br></br>\n                            </span>\n                        </h6> </p>\n                    </div>\n\n                \n                <div className=\"lifeline-container\">\n                        <p>\n                            <span onClick={handleFiftyFifty} className=\"mdi mdi-heart-half-full mdi-24px lifeline-icon\"></span>\n                            <span className=\"lifeline\">{fiftyFifty}</span>\n                        </p>\n                       \n                        <p>\n                            <span onClick={handleHints} className=\"mdi mdi-flash mdi-24px lifeline-icon\"></span>\n                            <span className=\"lifeline\">{hints}</span>\n                        </p>\n                    </div>\n\n                   \n\n                <h5>{currentQuestion.questionText}</h5>\n          \n            <div className=\"options-container\">\n                        <p onClick={handleOptionClick} className=\"option\">{currentQuestion.optionA}</p>\n                        <p onClick={handleOptionClick} className=\"option\">{currentQuestion.optionB}</p>\n            </div>\n\n            <div className=\"options-container\">\n                        <p onClick={handleOptionClick} className=\"option\">{currentQuestion.optionC}</p>\n                        <p onClick={handleOptionClick} className=\"option\">{currentQuestion.optionD}</p>\n            </div>\n            \n            <div className=\"button-container\">\n                <button onClick={handleQuitButton}>Quit</button>\n                <button onClick={handleNextButton}>Next</button>\n            </div>\n            </div>\n            \n        </Fragment>\n    \n    )\n}\n\nexport default PlayP6English;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}